/* Animation styles for subtle animated elements */
.particle-network {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
}

.particle {
  position: absolute;
  border-radius: 50%;
  background: rgba(138, 43, 226, 0.3);
  pointer-events: none;
}

.particle.small {
  width: 2px;
  height: 2px;
}

.particle.medium {
  width: 4px;
  height: 4px;
}

.particle.large {
  width: 6px;
  height: 6px;
}

.connection {
  position: absolute;
  background: linear-gradient(to right, rgba(138, 43, 226, 0.1), rgba(32, 178, 170, 0.1));
  height: 1px;
  transform-origin: left center;
  pointer-events: none;
}

.floating-element {
  animation: float 6s ease-in-out infinite;
}

.pulse-element {
  animation: pulse 3s ease-in-out infinite;
}

.glow-element {
  animation: glow 4s ease-in-out infinite;
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes glow {
  0% {
    box-shadow: 0 0 5px rgba(138, 43, 226, 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba(138, 43, 226, 0.6);
  }
  100% {
    box-shadow: 0 0 5px rgba(138, 43, 226, 0.3);
  }
}

.typing-effect {
  overflow: hidden;
  border-right: 2px solid var(--primary-color);
  white-space: nowrap;
  margin: 0 auto;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: var(--primary-color) }
}

.data-flow {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: -1;
  opacity: 0.1;
  background-image: 
    linear-gradient(to right, transparent 49.5%, rgba(138, 43, 226, 0.3) 50%, transparent 50.5%),
    linear-gradient(to bottom, transparent 49.5%, rgba(32, 178, 170, 0.3) 50%, transparent 50.5%);
  background-size: 30px 30px;
  animation: dataFlow 20s linear infinite;
}

@keyframes dataFlow {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 30px 30px;
  }
}

/* Neural network animation */
.neural-network {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 0.1;
}

.neuron {
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--primary-color);
  border-radius: 50%;
}

.synapse {
  position: absolute;
  height: 1px;
  background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
  transform-origin: left center;
}

/* Hover effects for cards */
.card-hover-effect {
  transition: all 0.3s ease;
}

.card-hover-effect:hover {
  transform: translateY(-10px);
  box-shadow: 0 10px 30px rgba(138, 43, 226, 0.3);
}

/* Gradient text animation */
.gradient-text {
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color), var(--accent-color), var(--primary-color));
  background-size: 300% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradientText 8s ease infinite;
}

@keyframes gradientText {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.hero-image {
    width: 100%;
    max-width: 600px;
    margin: 20px auto;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(138, 43, 226, 0.3);
}

.hero-image img {
    width: 100%;
    height: auto;
    transition: transform 0.5s ease;
}

.hero-image:hover img {
    transform: scale(1.05);
}

.card-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
    border-radius: 8px;
    margin-top: 15px;
    transition: transform 0.3s ease;
}

.about-card:hover .card-image {
    transform: scale(1.05);
}

.btn-outline {
    display: inline-block;
    padding: 12px 30px;
    background: transparent;
    color: var(--text-color);
    border: 2px solid var(--secondary-color);
    border-radius: 50px;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    z-index: 1;
    margin-left: 15px;
}

.btn-outline:hover {
    background: var(--secondary-color);
    color: var(--background-dark);
    box-shadow: 0 0 15px var(--glow-color);
    transform: translateY(-3px);
}

.cta-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
}

.feature-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 30px;
    margin-top: 50px;
}

.feature-card {
    background: rgba(30, 30, 30, 0.5);
    border-radius: 15px;
    padding: 25px;
    transition: all 0.3s ease;
    border: 1px solid rgba(138, 43, 226, 0.2);
    text-align: center;
}

.feature-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 30px rgba(138, 43, 226, 0.2);
}

.feature-card .icon {
    font-size: 2.5rem;
    margin-bottom: 15px;
    color: var(--secondary-color);
}

.feature-card h4 {
    font-size: 1.3rem;
    margin-bottom: 10px;
    color: var(--text-color);
}

.feature-card p {
    color: var(--text-secondary);
}

.text-center {
    text-align: center;
}

@media (max-width: 768px) {
    .cta-buttons {
        flex-direction: column;
    }
    
    .btn-outline {
        margin-left: 0;
        margin-top: 15px;
    }
}
